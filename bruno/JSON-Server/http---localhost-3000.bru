meta {
  name: {{scheme}}://{{host}}:3000
  type: http
  seq: 1
}

get {
  url: {{scheme}}://{{host}}:4444
  body: none
  auth: inherit
}

script:post-response {
  const data = res.body
  
  const columnDefinitions = [
    { field: "id", filter: true, floatingFilter: true },
    { field: "name", filter: true, floatingFilter: true },
    { field: "classification", filter: true, floatingFilter: true },
    { field: "population", filter: true, floatingFilter: true   }
  ];
  const todosColumnDefinitions = [
    { field: "id", filter: true, floatingFilter: true },
    { field: "title", filter: true, floatingFilter: true },
    { field: "assignedPeople['givenname]", filter: true, floatingFilter: true },
  ];
  
  const projectsColumnDefinitions = [
    { field: "id", filter: true, floatingFilter: true },
    { field: "title", filter: true, floatingFilter: true },
  ];
  
  
  bru.visualize('table', {
    name: 'Planets',
    provider: 'ag-grid',
    props: { rowData: data, columnDefinitions: projectsColumnDefinitions }
  });
  bru.visualize('table', {
    name: 'todos',
    provider: 'ag-grid',
    props: { rowData: data, columnDefinitions: todosColumnDefinitions }
  });
  bru.visualize('table', {
    name: 'Projects',
    provider: 'ag-grid',
    props: { rowData: data, columnDefinitions: todosColumnDefinitions }
  });
}
